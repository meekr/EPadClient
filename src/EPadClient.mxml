<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:components="components.*"
			   xmlns:classes="classes.*"
			   minWidth="978" minHeight="608"
			   skinClass="skins.ApplicationSkin"
			   backgroundColor="#abc123"
			   >
	<fx:Script>
		<![CDATA[
			import caurina.transitions.Tweener;
			
			import classes.ApplicationController;
			import classes.BoughtItem;
			import classes.Constants;
			import classes.DataController;
			import classes.UIController;
			
			import events.LoginEvent;
			import events.LogoutEvent;
			import events.MenuBarSelectedIndexChangedEvent;
			
			import mx.controls.Alert;
			import mx.core.IVisualElementContainer;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			[Bindable]
			private var remoteVersion:String;
			
			protected function loginHandler(event:LoginEvent):void
			{
				if (event.success)
				{
					// ui adjust
					IVisualElementContainer(homeContainer.parent).swapElementsAt(0, 1);
					homeContainer.height = homePage.measuredHeight-2;
					homeContainer.top = -homeContainer.height;
					homeContainer.alpha = 1;
					Tweener.addTween(homePage, {alpha:0, time:1});
					Tweener.addTween(homeContainer, {top:0, time:1});
					
					// data prepare
					var service:HTTPService = new HTTPService();
					service.url = Constants.DOWNLOAD_HISTORY_URL;
					service.method = "POST";
					service.resultFormat = "text";
					service.addEventListener(ResultEvent.RESULT, downloadHistoryListener);
					service.send(this);
				}
				else
				{
					Alert.show('用户名或密码错误', '出错了');
				}
			}
			
			protected function logoutHandler(event:LogoutEvent):void
			{
				// ui adjust
				IVisualElementContainer(homeContainer.parent).swapElementsAt(0, 1);
				homeContainer.top = -homeContainer.height;
				homeContainer.alpha = 0;
				homePage.alpha = 1;
			}
			
			private function downloadHistoryListener(event:ResultEvent):void {
				var json:String = String(event.result);
				var obj:Object = JSON.parse(json);
				ApplicationController.instance.boughtItems.removeAll();
				for (var i:int=0; i<obj.products.length; i++) {
					var item:BoughtItem = new BoughtItem();
					item.id = obj.products[i].id;
					item.name = obj.products[i].name;
					item.downloadLink = Constants.getNpkUrl(obj.products[i].download_link);
					ApplicationController.instance.boughtItems.addItem(item);
				}
			}
			
			protected function menuBar_menuBarSelectedIndexChangedEventHandler(event:MenuBarSelectedIndexChangedEvent):void
			{
				viewStack.selectedIndex = event.newIndex;
			}
			
			private function FL_setDeviceConnection(args:String):void
			{
				UIController.instance.deviceDisk.connected = (args=="1");
				
				if (UIController.instance.deviceDisk.connected) {
					CONFIG::ON_PC {
						UIController.instance.firmwareVersion = ExternalInterface.call("F2C_getFirmwareVersion", "AAAA");
					}
				}
			}
			
			private function clientCheckResultListener(event:ResultEvent):void {
				var str:String = String(event.result);
				var ver:String = str.substr(str.indexOf("<version>")+9);
				ver = ver.substr(0, ver.indexOf("<"));
				remoteVersion = ver;
				if (remoteVersion > UIController.instance.version)
				{
					foundNew.visible = true;
					Alert.yesLabel = "是";
					Alert.noLabel = "否";
					var message:String = "发现新版本E巧派助手，点击“是”将开始下载。安装新版本前请卸载现在运行的版本。";
					CONFIG::BYM {
						message = "发现新版本儿童学习机助手，点击“是”将开始下载。安装新版本前请卸载现在运行的版本。";
					}
					CONFIG::XBW {
						message = "发现新版本儿童学习机助手，点击“是”将开始下载。安装新版本前请卸载现在运行的版本。";
					}
					CONFIG::XXM {
						message = "发现新版本童伴熊小米助手，点击“是”将开始下载。安装新版本前请卸载现在运行的版本。";
					}
					Alert.show(message, "您是否希望下载新版本助手？", Alert.YES|Alert.NO, null, alertEventHandler, null, Alert.YES);
				}
			}
			
			private function alertEventHandler(event:CloseEvent):void {
				if (event.detail == Alert.YES) {
					var url:String = 'http://www.kizup.com/static/client.zip';
					CONFIG::BYM {
						url = 'http://www.kizup.com/static/client-bym.zip';
					}
					CONFIG::XBW {
						url = 'http://www.kizup.com/static/client-xbw.zip';
					}
					CONFIG::XXM {
						url = 'http://www.kizup.com/static/client-xxm.zip';
					}
					navigateToURL(new URLRequest(url));
				}
			}
			
			protected function foundNew_clickHandler(event:MouseEvent):void
			{
				var evt:CloseEvent = new CloseEvent(CloseEvent.CLOSE);
				evt.detail = Alert.YES;
				alertEventHandler(evt);
			}
			
		]]>
	</fx:Script>
	<s:creationComplete>
		<![CDATA[
		fscommand("loaded");
		UIController.instance.externalAddCallback("FL_setDeviceConnection", FL_setDeviceConnection);
		UIController.instance.user.addEventListener(LoginEvent.name, loginHandler);
		UIController.instance.user.addEventListener(LogoutEvent.name, logoutHandler);
		
		// check client version
		var service:HTTPService = new HTTPService();
		service.url = Constants.CHECK_CLIENT_URL+"?rnd="+Math.floor(Math.random()*100000);
		CONFIG::BYM {
		service.url = "http://www.kizup.com/client/bym-client-version.xml"+"?rnd="+Math.floor(Math.random()*100000);
		}
		CONFIG::XBW {
		service.url = "http://www.kizup.com/client/xbw-client-version.xml"+"?rnd="+Math.floor(Math.random()*100000);
		}
		CONFIG::XXM {
		service.url = "http://www.kizup.com/client/xxm-client-version.xml"+"?rnd="+Math.floor(Math.random()*100000);
		}
		service.method = "GET";
		service.resultFormat = "text";
		service.addEventListener(ResultEvent.RESULT, clientCheckResultListener);
		service.send();
		
		brand_logo.source = UIController.instance.BRAND_LOGO;
		CONFIG::BYM {
			brand_logo.source = UIController.instance.BRAND_LOGO_BYM;
		}
		CONFIG::XBW {
			brand_logo.source = UIController.instance.BRAND_LOGO_XBW;
		}
		CONFIG::XXM {
			brand_logo.source = UIController.instance.BRAND_LOGO_XXM;
		}
		]]>
	</s:creationComplete>
	<fx:Style source="css/global.css"/>
	<s:Group width="100%" height="100%">
		<s:HGroup gap="10" height="30" left="0" right="10" top="10" horizontalAlign="right" verticalAlign="middle">
			<s:Label text="Welcome, {UIController.instance.user.username}"/>
			<s:Group width="74" height="20">
				<s:Rect width="100%" height="100%" radiusX="10">
					<s:fill>
						<s:SolidColor color="{UIController.instance.deviceDisk.volumeStatusColor}"/>
					</s:fill>
				</s:Rect>
				<s:Label width="100%" height="100%" color="#FFFFFF" textAlign="center" verticalAlign="middle" verticalCenter="1" text="{UIController.instance.deviceDisk.volumeStatusDescription}"/>
			</s:Group>
		</s:HGroup>
		<s:Image left="18" top="15" id="brand_logo" width="257" height="71"/>
		<s:HGroup left="10" bottom="8" height="20">
			<s:Label text="version: {UIController.instance.version}" fontSize="11" color="#333333" height="100%" verticalAlign="middle"/>
			<s:Label id="foundNew" visible="false" text="发现新版本助手{remoteVersion}，前往下载" color="#ff0000" fontSize="11"
					 height="100%" verticalAlign="middle" buttonMode="true"
					 textDecoration="underline" click="foundNew_clickHandler(event)"/>
		</s:HGroup>
		<components:MenuBar id="menuBar" right="20" top="21" menuBarSelectedIndexChangedEvent="menuBar_menuBarSelectedIndexChangedEventHandler(event)"/>
		<!--<s:TextArea left="0" top="0" width="400" height="20" text="{UIController.instance.user.token}"/>-->
		
		<mx:ViewStack id="viewStack" left="10" top="100" right="10" bottom="28">
			<s:NavigatorContent width="100%" height="100%">
				<s:Group width="100%" height="100%" clipAndEnableScrolling="true">
					<components:HomeContainer id="homeContainer" width="100%" height="100%" alpha="0"/>
					<components:HomePage id="homePage" width="100%" height="100%" visible="true" includeInLayout="true"/>
				</s:Group>
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%">
				<components:StorePage width="100%" height="100%"/>
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%">
				<components:AccountPage width="100%" height="100%"/>
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%">
				<components:HelpCenter width="100%" height="100%"/>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:Group>
</s:Application>