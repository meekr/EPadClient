<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:components="components.*"
			   xmlns:classes="classes.*"
			   minWidth="978" minHeight="608"
			   skinClass="skins.ApplicationSkin"
			   backgroundColor="#abc123"
			   >
	<fx:Script>
		<![CDATA[
			import caurina.transitions.Tweener;
			
			import classes.ApplicationController;
			import classes.BoughtItem;
			import classes.Constants;
			import classes.DataController;
			import classes.UIController;
			
			import events.LoginEvent;
			import events.LogoutEvent;
			import events.MenuBarSelectedIndexChangedEvent;
			
			import mx.controls.Alert;
			import mx.core.IVisualElementContainer;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			protected function loginHandler(event:LoginEvent):void
			{
				if (event.success)
				{
					// ui adjust
					IVisualElementContainer(homeContainer.parent).swapElementsAt(0, 1);
					homeContainer.height = homePage.measuredHeight-2;
					homeContainer.top = -homeContainer.height;
					homeContainer.alpha = 1;
					Tweener.addTween(homePage, {alpha:0, time:1});
					Tweener.addTween(homeContainer, {top:0, time:1});
					
					// data prepare
					var service:HTTPService = new HTTPService();
					service.url = Constants.DOWNLOAD_HISTORY_URL;
					service.method = "POST";
					service.resultFormat = "text";
					service.addEventListener(ResultEvent.RESULT, downloadHistoryListener);
					service.send(this);
				}
				else
				{
					homePage.currentState = "error";
				}
			}
			
			protected function logoutHandler(event:LogoutEvent):void
			{
				// ui adjust
				IVisualElementContainer(homeContainer.parent).swapElementsAt(0, 1);
				homeContainer.top = -homeContainer.height;
				homeContainer.alpha = 0;
				homePage.alpha = 1;
			}
			
			private function downloadHistoryListener(event:ResultEvent):void {
				var json:String = String(event.result);
				var obj:Object = JSON.parse(json);
				ApplicationController.instance.boughtItems.removeAll();
				for (var i:int=0; i<obj.products.length; i++) {
					var item:BoughtItem = new BoughtItem();
					item.id = obj.products[i].id;
					item.name = obj.products[i].name;
					item.downloadLink = Constants.getNpkUrl(obj.products[i].download_link);
					ApplicationController.instance.boughtItems.addItem(item);
				}
			}
			
			protected function menuBar_menuBarSelectedIndexChangedEventHandler(event:MenuBarSelectedIndexChangedEvent):void
			{
				viewStack.selectedIndex = event.newIndex;
			}
			
			private function FL_setDeviceConnection(args:String):void
			{
				UIController.instance.deviceDisk.connected = (args=="1");
				
				if (UIController.instance.deviceDisk.connected) {
					CONFIG::ON_PC {
						UIController.instance.firmwareVersion = ExternalInterface.call("F2C_getFirmwareVersion", "AAAA");
					}
				}
			}
		]]>
	</fx:Script>
	<s:creationComplete>
		<![CDATA[
		fscommand("loaded");
		UIController.instance.externalAddCallback("FL_setDeviceConnection", FL_setDeviceConnection);
		UIController.instance.user.addEventListener(LoginEvent.name, loginHandler);
		UIController.instance.user.addEventListener(LogoutEvent.name, logoutHandler);
		]]>
	</s:creationComplete>
	<fx:Style source="css/global.css"/>
	<s:Group width="100%" height="100%">
		<s:Label left="0" right="10" top="10" height="30" textAlign="right" text="Welcome, {UIController.instance.user.username}"/>
		<s:Image left="51" top="15" source="@Embed(source='assets/logo.png')" width="193" height="71"/>
		<s:Label left="10" bottom="8" text="version: {UIController.instance.version}" fontSize="10" color="#333333"/>
		<components:MenuBar id="menuBar" right="20" top="21" menuBarSelectedIndexChangedEvent="menuBar_menuBarSelectedIndexChangedEventHandler(event)"/>
		<!--<s:TextArea left="0" top="0" width="400" height="20" text="{UIController.instance.user.token}"/>-->
		
		<mx:ViewStack id="viewStack" left="10" top="100" right="10" bottom="28">
			<s:NavigatorContent width="100%" height="100%">
				<s:Group width="100%" height="100%" clipAndEnableScrolling="true">
					<components:HomeContainer id="homeContainer" width="100%" height="100%" alpha="0"/>
					<components:HomePage id="homePage" width="100%" height="100%" visible="true" includeInLayout="true"/>
				</s:Group>
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%">
				<components:StorePage width="100%" height="100%"/>
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%">
				<components:AccountPage width="100%" height="100%"/>
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%">
				<components:HelpCenter width="100%" height="100%"/>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:Group>
</s:Application>