<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:components="components.*"
				autoDrawBackground="false"
				width="250">
	<fx:Script>
		<![CDATA[
			import classes.AppItem;
			import classes.ApplicationController;
			import classes.BoughtItem;
			import classes.Constants;
			import classes.DataController;
			import classes.Download;
			import classes.StoreItem;
			import classes.UIController;
			import classes.Utils;
			
			import events.DownloadCompleteEvent;
			
			import mx.controls.Alert;
			import mx.controls.listClasses.ListData;
			
			private var _loader:URLLoader;
			
			override public function set data(value:Object):void
			{
				super.data = value;
				var item:StoreItem = value as StoreItem;
				if (item)
				{
					_loader = new URLLoader();
					_loader.dataFormat = URLLoaderDataFormat.BINARY;
					_loader.addEventListener(Event.COMPLETE, iconLoadCompleteHandler);
					
					var request:URLRequest = new URLRequest();
					request.url = value.iconUrl;
					_loader.load(request);
					
					for each (var bi:BoughtItem in ApplicationController.instance.boughtItems) {
						if (bi.name == item.name) {
							item.purchased = true;
							break;
						}
					}
					for each (var ai:AppItem in ApplicationController.instance.localItems) {
						if (ai.name == item.name) {
							item.downloaded = true;
							break;
						}
					}
					for each (var d:Download in UIController.instance.downloadingItems) {
						if (d.appName == item.name) {
							item.downloading = true;
							_downloadItem = d;
							break;
						}
					}
				}
			}
			
			private function iconLoadCompleteHandler(event:Event):void
			{
				var buf:ByteArray = _loader.data;
				icon.load(buf);
			}
			
			public var _downloadItem:Download;
			[Bindable]
			public function get downloadItem():Download
			{
				return _downloadItem;
			}
			public function set downloadItem(item:Download):void
			{
				if (_downloadItem)
					_downloadItem.removeEventListener(DownloadCompleteEvent.name, downloadCompleted);
				_downloadItem = item;
				if (_downloadItem) {
					_downloadItem.addEventListener(DownloadCompleteEvent.name, downloadCompleted);
				}
			}
			
			protected function downloadCompleted(event:DownloadCompleteEvent):void
			{
				data.downloading = false;
				data.downloaded = true;
				for (var i:int=0; i<UIController.instance.downloadingItems.length; i++)
				{
					var d:Download = UIController.instance.downloadingItems.getItemAt(i) as Download;
					if (d.appName == data.name) {
						UIController.instance.downloadingItems.removeItemAt(i);
						break;
					}
				}
			}
			
			protected function btnBuy_clickHandler(event:MouseEvent):void
			{
				if (UIController.instance.user.loggedIn)
				{
					data.downloading = true;
					downloadItem = UIController.instance.addStoreItemToDownload(StoreItem(data));
				}
				else
				{
					mx.controls.Alert("请您登录后下载");
				}
			}
			
			protected function btnCancel_clickHandler(event:MouseEvent):void
			{
				for each (var item:AppItem in ApplicationController.instance.boughtItems) {
					if (item.name == data.name) {
						data.purchased = true;
						return;
					}
				}
				data.downloading = false;
				data.downloaded = false;
			}
			
			protected function icon_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest(Constants.getProductDetailUrl(data.id)));
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:HorizontalLayout gap="0"/>
	</s:layout>
	<fx:Binding source="downloadItem.percentage" destination="rcDownloading.percentWidth"/>
	
	<mx:Image id="icon" source="@Embed(source='assets/icon-placeholder.png')" width="75" height="75" click="icon_clickHandler(event)"/>
	
	<s:Spacer width="15"/>
	
	<s:VGroup width="100%" height="100%">
		<s:Label text="{data.name}" fontSize="15" color="#666666" styleName="linkText" click="icon_clickHandler(event)"/>
		<s:Label text="分类：{data.category}"/>
		<s:Spacer height="100%"/>
		<components:KPButton text="免费下载"
							 width="80" height="22"
							 click="btnBuy_clickHandler(event)"
							 visible="{!data.downloading &amp;&amp; !data.downloaded &amp;&amp; !data.purchased}"
							 includeInLayout="{!data.downloading &amp;&amp; !data.downloaded &amp;&amp; !data.purchased}"/>
		<components:KPButton text="重新下载"
							 backgroundColor="#fd4122"
							 width="80" height="22"
							 click="btnBuy_clickHandler(event)"
							 visible="{!data.downloading &amp;&amp; !data.downloaded &amp;&amp; data.purchased}"
							 includeInLayout="{!data.downloading &amp;&amp; !data.downloaded &amp;&amp; data.purchased}"/>
		<s:HGroup width="100%" height="22" gap="3" verticalAlign="bottom"
				  visible="{data.downloading &amp;&amp; !data.downloaded}" includeInLayout="{data.downloading &amp;&amp; !data.downloaded}">
			<s:Group width="100%" height="14" verticalCenter="-2">
				<s:Rect left="0" top="0" right="0" bottom="0" radiusX="6">
					<s:fill>
						<s:SolidColor color="#666666"/>
					</s:fill>
				</s:Rect>
				<s:Group left="2" top="2" right="2" bottom="2">
					<s:Rect id="rcDownloading" width="0%" height="100%" radiusX="6">
						<s:fill>
							<s:SolidColor color="#fb8941"/>
						</s:fill>
					</s:Rect>
				</s:Group>
			</s:Group>
			<s:Image id="btnCancel" source="@Embed(source='assets/icon-cancel.png')"
					 width="22" height="22" verticalCenter="2"
					 click="btnCancel_clickHandler(event)"/>
		</s:HGroup>
		<s:Label color="#CCCCCC" text="已下载" height="16" verticalAlign="middle" visible="{data.downloaded}" includeInLayout="{data.downloaded}"/>
	</s:VGroup>
</s:ItemRenderer>