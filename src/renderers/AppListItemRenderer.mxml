<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true"
				width="100%" height="85" xmlns:components="components.*"
				>
	<fx:Script>
		<![CDATA[
			import classes.AppItem;
			import classes.AppItemTransitionStatus;
			import classes.ApplicationController;
			import classes.Utils;
			
			import events.AppInstallEvent;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			
			[Bindable]
			private var description:String;
			[Bindable]
			private var copyingPercentage:Number;
			
			override public function set data(value:Object):void
			{
				if (super.data is AppItem)
					AppItem(super.data).removeEventListener(AppInstallEvent.name, installHandler);
				super.data = value;
				if (super.data is AppItem)
					AppItem(super.data).addEventListener(AppInstallEvent.name, installHandler);
				
				var item:AppItem = value as AppItem;
				if (item) {
					if (item.isDeviceType()) {
						currentState = "device";
						thumbnail.load(item.iconByteArray);
					}
					else {
						thumbnail.source = item.iconUrl;
					}
					
					if (item.installed) {
						currentState = "installed";
					}
					else if (!item.isDeviceType()) {
						currentState = "default";
					}
				}
				else {
					thumbnail.source = null;
				}
			}
			
			private function installHandler(event:AppInstallEvent):void
			{
				switch (event.status)
				{
					case AppItemTransitionStatus.COMPLETED:
						currentState = "installed";
						break;
					case AppItemTransitionStatus.REMOVED:
						currentState = "default";
						break;
					case AppItemTransitionStatus.TRANSFERING:
						currentState = "transfering";
						if (event.description.indexOf(" ") > 1) {
							copyingPercentage = parseInt(event.description.substr(event.description.lastIndexOf(" ")+1));
						}
						description = event.description.substr(0, event.description.lastIndexOf(" "));
						break;
					default:
						currentState = event.status;
						break;
				}
				//Utils.log2c("event.status="+event.status+", desc="+event.description);
			}
			
			protected function checkbox_changeHandler(event:Event):void
			{
				data.selected = checkbox.selected;
			}
			
			private function alertEventHandler(event:CloseEvent):void {
				if (event.detail == Alert.YES) {
					CONFIG::ON_PC {
						currentState = "deleting";
						var app:AppItem = AppItem(data);
						ExternalInterface.call("F2C_deleteDeviceApp", app.name);
						var idx:int = ApplicationController.instance.deviceItems.getItemIndex(app);
						ApplicationController.instance.deviceItems.removeItemAt(idx);
						ExternalInterface.call("F2C_updateVolumnStatus", "");
						
						// reset downloaded app status
						for each (var ai:AppItem in ApplicationController.instance.localItems)
						{
							if (ai.name == app.name && ai.installed)
							{
								ai.installed = false;
								var evt:AppInstallEvent = new AppInstallEvent();
								evt.status = AppItemTransitionStatus.DEFAULT;
								ai.dispatchEvent(evt);
							}
						}
					}
				}
			}
			
			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				Alert.yesLabel = "是";
				Alert.noLabel = "否";
				Alert.show("您确定从设备移除\"" + AppItem(data).name + "\"吗？", "确认", Alert.YES|Alert.NO, null, alertEventHandler, null, Alert.NO);
			}
			
			protected function btnDeleteLocal_clickHandler(event:MouseEvent):void
			{
				CONFIG::ON_PC {
					var app:AppItem = AppItem(data);
					ExternalInterface.call("F2C_deleteLocalApp", app.name);
					var idx:int = ApplicationController.instance.localItems.getItemIndex(app);
					ApplicationController.instance.localItems.removeItemAt(idx);
				}
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="default"/>
		<s:State name="extracting"/>
		<s:State name="transfering"/>
		<s:State name="installed"/>
		<s:State name="device"/>
		<s:State name="deleting"/>
	</s:states>
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle" paddingTop="5" paddingBottom="5"/>
	</s:layout>
	<fx:Binding source="copyingPercentage" destination="rcCopying.percentWidth"/>
	<mx:Image id="thumbnail" source="@Embed(source='assets/icon-placeholder.png')" width="75" height="75" alpha.installed="0.5"/>
	<s:Spacer width="8"/>
	<s:VGroup width="100%" height="100%" verticalAlign="top" paddingTop="8" paddingBottom="8" gap="7">
		<s:HGroup width="100%">
			<s:Label text="{data.name}" color="#333333" fontSize="14" alpha.installed="0.5"/>
			<s:Spacer width="100%"/>
			<components:KPButton id="btnDeleteLocal"
								 backgroundColor="#fd4122"
								 text="删除"
								 fontSize="13"
								 click="btnDeleteLocal_clickHandler(event)"
								 excludeFrom="device"/>
		</s:HGroup>
		<s:Label text="文件大小：{data.fileSize}" excludeFrom="device" alpha.installed="0.5"/>
		<s:Spacer height="100%"/>
		<s:HGroup excludeFrom="device" width="100%">
			<s:Label text="正在解压缩..." includeIn="extracting"/>
			<s:HGroup width="100%" gap="5" includeIn="transfering">
				<s:Label text="正在安装：{description}"/>
				<s:Group width="100%" height="14" verticalCenter="-2">
					<s:Rect left="0" top="0" right="0" bottom="0" radiusX="6">
						<s:fill>
							<s:SolidColor color="#666666"/>
						</s:fill>
					</s:Rect>
					<s:Group left="2" top="2" right="2" bottom="2">
						<s:Rect id="rcCopying" width="0%" height="100%" radiusX="6">
							<s:fill>
								<s:SolidColor color="#fb8941"/>
							</s:fill>
						</s:Rect>
					</s:Group>
				</s:Group>
			</s:HGroup>
			<s:Label color="#999999" text="已安装" includeIn="installed"/>
			<s:Label text="正在删除..." includeIn="deleting"/>
			<s:Label text="" width="0"/>
		</s:HGroup>
	</s:VGroup>
	<s:CheckBox id="checkbox" skinClass="skins.MyCheckBox" selected="{data.selected}" change="checkbox_changeHandler(event)" excludeFrom="device,installed"/>
	<s:Image id="btnDelete" source="@Embed(source='assets/icon-cancel.png')"
			 width="22" height="22" verticalCenter="2"
			 click="btnDelete_clickHandler(event)" includeIn="device"/>
	<s:Spacer width="10"/>
</s:ItemRenderer>